openapi: 3.0.0
info:
  version: 1.0.0
  title: Appointments Service
  description: >-
    This appointments service is an api used by a single Operator to schedule meetings on the
    behalf of other people. Meeting invitees or attendees will not be able interact with the api directly
    and as such implementing authentication will not be a concern.
    
    This api is responsible for creating, editing, viewing and deleting meetings scheduled by the Operator.
    Additional requirements for the various functions of the api are listed as follows.
    Creating:
      - A meeting must have a physical location, a start time and a duration and at least 2 invitees.
    Deleting:
      - A meeting cannot be deleted within 2 hours of when it will take place.
    Editing:
      - A meeting cannot be edited within 2 hours of when it will take place.
      - A meeting can be cancelled.
    Viewing:
      - Scheduled meeting should be able to be viewed and filtered (Cancelled, not cancelled, and all).
  termsOfService: https://www.zeel.com/terms
  contact:
    name: Zeel Networks, Inc.
    url: https://www.zeel.com
    email: hosting@zeel.com
paths:
components:
    schemas:
      Person:
        type: object
        description: A person associated with a Meeting, whether they were invited or will be attending
        properties:
          first_name: 
            type: string
            description: The person's legal first name or given name
            example: Jane
          last_name:
            type: string
            description: The person's legal last name or surname
            example: Doe
      Location:
        type: object
        description: A physical location with an address
        properties:
          locality:
            type: string
            example: New York
            description: The city or town.
          line_1:
            type: string
            example: 45 West 45th Street
            description: The street name and number.
          line_2:
            type: string
            example: 16 Flr
            description: The apartment number or floor number.
          postal:
            type: string
            example: '10036'
            description: The zip code/postal code.
          region:
            type: string
            example: NY
            description: The state/province/territory.
      Meeting:
        type: object
        description: A scheduled assembly of people.
        properties:
          people:
            type: array
            items:
              $ref: '#/components/schemas/Person'
          start_time:
            type: string
            description: When the meeting will begin
            example: 4pm EST
          location:
            $ref: '#/components/schemas/Location'
      Error:
        type: object
        description: Representation of a server error.
        properties:
          detail:
            type: string
            example: >-
              The requested URL was not found on the server. If you entered the URL
              manually please check your spelling and try again.
            description: >-
              A human readable explanation specific to this occurrence of the problem.
          status:
            type: integer
            example: 404
            description: >-
              The HTTP status code ([RFC7231], Section 6) generated by the origin server
              for this occurrence of the problem.
          title:
            type: string
            example: Not Found
            description: >-
              A short, human-readable summary of the problem type.
          type:
            type: string
            example: about:blank
            description: >-
              An absolute URI [RFC3986] that identifies the problem type. When
              dereferenced, it SHOULD provide human-readable documentation for the
              problem type (e.g., using HTML[W3C.REC-html401-19991224]). When this
              member is not present, its value is assumed to be "about:blank".
    responses:
      BadRequest:
        description: Bad Request for operation.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    status:
                      example: 400
                    detail:
                      example: Missing query parameter 'zip_code'
      NotFound:
        description: The specified resource was not found.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    status:
                      example: 404
                    detail:
                      example: >-
                        The requested URL was not found on the server. If you
                        entered the URL manually please check your spelling and
                        try again.
